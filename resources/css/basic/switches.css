@layer components {
    /**
     * Here you can add custom styles for checkboxes, radios and checkbox-switches.
     *
     * Tailstart comes with some included guideliness to create your own.
     */
    input[type="checkbox"].form-control,
    input[type="radio"].form-control {
        /**
         * This disables any browser styling on the input.
         */
        appearance: none;

        /**
         * Here we will lay some common ground for both checkboxes and radios.
         */
        @apply inline-block relative h-5 w-5;
        @apply outline-none cursor-pointer bg-transparent border border ring-0 ring-gray-200;
        @apply transition-all;

        /**
         * If there is a label next to this box, inline and center it.
         */
        & + label {
            @apply inline-block cursor-pointer ml-1 align-top;
        }

        /**
         * This is a "surface" we will create to add a check or circle.
         */
        &:after {
            content: '';
            @apply block absolute left-0 top-0 transition-all;
        }

        /**
         * If it's checked, we can change the color of some elements.
         */
        &:checked {
            @apply bg-blue-500 border-blue-500 ring-blue-200;
        }

        /**
         * When disabled, add the "disabled" colors.
         */
        &:disabled, &.disabled {
            @apply pointer-events-none bg-gray-200 border-gray-200;

            &:checked {
                @apply bg-gray-200 border-gray-200;
            }

            & + label {
                @apply pointer-events-none;
            }
        }

        /**
         * The common active state (clicking) needs to be specific when checked or won't
         * override the ring size.
         */
        &:checked:active, &:not(:checked):active {
            @apply ring-2;
        }

        /**
         * Add style on hover and focus. When disabled, no focus/hover/active can be made..
         */
        &:focus, &:hover {
            @apply ring-4;
        }

        /**
         * If it's not a custom switch, we will play with the opacity of the "after" box.
         */
        &:not(.switch) {
            &:after {
                @apply opacity-0;
            }

            &:checked:after {
                @apply opacity-100;
            }
        }
    }

    /**
     * Styling the radio is rather simple: roung the boxes and you're set.
     */
    input[type='radio'] {
        @apply rounded-full;

        &:after {
            @apply w-full h-full rounded-full bg-white transform scale-50;
        }

        &:disabled:checked:after, &.disabled:checked:after {
            @apply bg-gray-400;
        }
    }

    /**
     * These are styles only for the checkbox.
     *
     * Basically, we will create the "checkmark" by rotating a rectangle and positioning it.
     */
    input[type="checkbox"].form-control:not(.switch) {
        @apply rounded;

        &:after {
            @apply w-1/3 h-1/2 left-1/3 top-[20%];
            @apply border-r-2 border-b-2 border-blue-50;
            @apply transform rotate-45;
        }

        &:disabled:checked:after, &.disabled:checked:after {
            @apply border-gray-400;
        }

        /**
         * For indeterminate checkboxes, we just need to make a simple line and put it in the middle.
         */
        &:is([indeterminate]):after {
            @apply rotate-0 border-r-0 w-1/2 h-0 left-1/4 top-1/2;
        }
    }

    /**
     * Here is the style of the "switch". These can be checkboxes, or even radio buttons.
     */
    input.form-control.switch {
        /**
         * We will use "box-content" to take into account the border on sizing its height.
         * That will allow our circle to be centered using "em" rather than pixels.
         */
        @apply w-8 h-5 rounded-full box-content;

        /**
         * Here we will use "transition-transform" only since enabling it for the background color
         * makes the ":after" dissapar until the animation completes. This may be a rendering bug.
         */
        &:after {
            @apply w-3 h-3 left-1 top-1 bg-gray-300 rounded-full transform-gpu transition-transform translate-x-0;
        }

        &:checked:after {
            @apply bg-white translate-x-full;
        }

        &:disabled, &.disabled {
            &:not(:checked):after {
                @apply bg-white;
            }

            &:checked:after {
                @apply bg-gray-400;
            }
        }
    }
}